#!/usr/bin/env php

<?php
### настройка проекта. Настройка docopt. Подключение
require(__DIR__ . '/../vendor/docopt/docopt/src/docopt.php');

### Настройка проекта. namespace. настройка Composer autoload. список загрузки
use function Hexlet\Code\gendiff\gendiff;

### Настройка проекта. namespace. настройка Composer autoload. подключение Абсолютный путь с ..
$status_result = null;
$autoload1 = __DIR__ . "/../vendor/autoload.php";
$autoload2 = __DIR__ . "/../../../vendor/autoload.php";

if (file_exists($autoload1)) {
    $PROJECT_status = require_once($autoload1);
} else {
    $PROJECT_status = require_once($autoload2);
}


## Задача.

### Задача-часть. docopt
    // распределение и хранение аргументов и опций в соответствии из строки запроса
    // валидация правильного применения аргументов и опций
    // пример ./bin/gendiff --format string -- ./../-buffer/_file1.json ../-buffer/_file2.json

$doc = <<<DOC
gendiff
Generate diff

Usage:
    gendiff (-h|--help)
    gendiff (-v|--version)
    gendiff [--format <fmt>] [--] <firstFile> <secondFile>
    
Options:
    -h --help       Show this screen
    -v --version    Show version
    --format <fmt>  Report format [default: stylish]
    --              separate argument value from options
DOC;

$params = array(
    'argv' => array_slice($_SERVER['argv'], 1),
    'help' => true,
    'version' => '0.7.0',
    'optionsFirst' => true,
);
$args = Docopt::handle($doc, $params);

### Задача-часть. Характеристики проект-задача, входящие данные FS: процесс-получение (как есть)
$file1_pathname = $args->args['<firstFile>'];
$file2_pathname = $args->args['<secondFile>'];
// $format = $format ?? 'stylish'; // разрабатывается далее

### Задача-часть. Функция Сравнение файлов.
gendiff($file1_pathname, $file2_pathname);

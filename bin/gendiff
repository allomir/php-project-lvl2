#!/usr/bin/env php

<?php
### настройка проекта. Настройка docopt. Подключение
require(__DIR__ . '/../vendor/docopt/docopt/src/docopt.php');

### Настройка проекта. namespace. настройка Composer autoload. список загрузки
use function Hexlet\Code\gendiff;
use function Hexlet\Code\printTabValues;

### Настройка проекта. namespace. настройка Composer autoload. подключение Абсолютный путь с ..
$status_result = null;
$autoload1 = __DIR__ . "/../vendor/autoload.php";
$autoload2 = __DIR__ . "/../../../vendor/autoload.php";

if (file_exists($autoload1)) {
    $status_result = require_once($autoload1);
} else {
    $status_result = require_once($autoload2);
}

## Задача. 
### Задача. Интерфейс {docopt}, проверка интерфейса

$doc = <<<DOC
gendiff
Generate diff

Usage:
    gendiff (-h|--help)
    gendiff (-v|--version)
    gendiff [--format <fmt>] <firstFile> <secondFile>
    
Options:
    -h --help       Show this screen
    -v --version    Show version
    --format <fmt>  Report format [default: stylish]

DOC;

$params = array(
    'argv'=>array_slice($_SERVER['argv'], 1),
    'help'=>false,
    'version'=>null,
    'optionsFirst'=>false,
);
$args = Docopt::handle($doc, $params);

### Задача. Данные: Проверка

    $file_1_path = $params['argv'][0];
    if (!is_file($file_1_path)) {
        throw new \exception('ERROR: файл ' . $file_1_path);
    }
    
    $file_2_path = $params['argv'][1];
    if (!is_file($file_2_path)) {
        throw new \exception('ERROR: файл ' . $file_2_path);
    }

### Виды функций - выбор для решения
$gendiff_result = \Hexlet\Code\gendiff($file_1_path, $file_2_path);

### Место показа, хранения результата
echo 'Результат сравненение файлы' . PHP_EOL;
print_r($gendiff_result);

